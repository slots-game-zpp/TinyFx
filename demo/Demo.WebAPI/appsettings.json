{
  "Project": {
    "ProjectId": "demoapp", //项目标识确保唯一
    "Description": "demo项目", //项目描述
    "ApplicationName": "tinyfx", // 应用程序名称(相同名称的项目间数据保护,Session和Cookie共享)
    "ConsoleLogLevel": "Debug", //LogUtil.ConsoleLogger的日志级别，如果使用Serilog则无效
    "MinThreads": 100, // 线程池最小线程数，0-采用默认值
    "ResponseErrorMessage": true, //是否返回客户端错误信息(自定义异常和未处理异常的message)
    "ResponseErrorDetail": true, //是否返回客户端异常详细信息（exception序列化信息）
    "IsDebugEnvironment": true, //否测试环境
    "Environment": null //当前环境:local,dev,fat(qa),uat(staging),pro(prod)
  },

  "Host": {
    "RegisterEnabled": true, // 是否注册Host服务
    "RegisterApiType": "http",
    "HeartbeatInterval": 5000, // 主机注册心跳间隔，默认5秒最小1秒
    "HeathInterval": 10000, // 主机检查间隔，默认1分钟最小10秒
    "TimerMinDelay": 200, // 主机Timer最小Delay时间, 默认200最小100
    "TimerWaitTimeout": 20000 // 主机Timer关闭等待超时，默认20秒最小5秒
  },

  "AWS": {
    "Enabled": true,
    "Profile": "default",
    "Region": "us-west-2",
    "AccessKey": "AKIAULAJHBY2I5IW2HCX",
    "SecretKey": "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",
    "VpcName": "my-vpc",
    "LoadBalancing": {
      "RegisterTargetGroup": false,
      "TargetGroupName": ""
    }
  },

  "Serilog": {
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File" ],
    "MinimumLevel": {
      "Default": "Debug", // 日志级别限制：Verbose|Debug|Information|Warning|Error|Fatal
      "Override": {
        "Microsoft": "Error",
        "System": "Warning",
        "Grpc": "Warning",
        "ProtoBuf": "Warning"
      }
    },
    "WriteTo": {
      "ConsoleSink": {
        "Name": "Console",
        "Args": {
          "restrictedToMinimumLevel": "Debug", // 日志级别
          "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      },
      "FileSink": {
        "Name": "File",
        "Args": {
          "path": "./logs/log.txt",
          "rollingInterval ": "Day", // 滚动文件名生成策略。如：log20190101.txt
          "restrictedToMinimumLevel": "Information", // 日志级别
          "rollOnFileSizeLimit": true, //开启大小限制
          "fileSizeLimitBytes": 10000000, //文件大小限制
          "retainedFileCountLimit": 7, // 文件保留数限制,不限制 = null
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      },
      "ELKSink": {
        "Name": "TinyFxELK",
        "Args": {
          "restrictedToMinimumLevel": "Debug",
          "nodeUris": "http://192.168.1.120:9201",
          "autoRegisterTemplate": true,
          "autoRegisterTemplateVersion": "ESv8",
          "typeName": null,
          "batchAction": "Create",
          "batchPostingLimit": 1
        }
      }
    },
    "Enrich": [],
    "Destructure": [],
    "Filter": [],
    "Properties": {}
  },
  "SqlSugar": {
    "Enabled": true,
    "DbConfigProvider": null, //连接配置提供者
    "DbSplitProvider": null, //数据分库分表提供者
    "DefaultConnectionStringName": "default",
    "ConnectionStrings": {
      "default": {
        "DbType": "MySql",
        "ConnectionString": "server=192.168.1.120;port=3306;database=ing;uid=root;pwd=root;sslmode=Disabled;allowuservariables=True;AllowLoadLocalInfile=true;Pooling=false",
        "LogEnabled": true,
        "LogSqlMode": 2,
        "SlaveEnabled": false
      },
      "game": {
        "DbType": "MySql",
        "ConnectionString": "server=192.168.1.120;port=3306;database=gdb;uid=root;pwd=root;sslmode=Disabled;allowuservariables=True;AllowLoadLocalInfile=true;Pooling=false",
        "LogEnabled": true,
        "LogSqlMode": 2,
        "SlaveEnabled": false
      }
    }
  },

  "Redis": {
    "DefaultConnectionStringName": "default",
    "ConnectionStrings": {
      "default": {
        "ConnectionString": "192.168.1.120:6379,password=root,defaultDatabase=0,keepAlive=-1",
        "SerializeMode": "json",
        "NamespaceMap": ""
      }
    },
    "ConsumerAssemblies": []
  },
  "RabbitMQ": {
    "Enabled": true,
    "LogEnabled": true,
    "SACBindDelay": 120,
    "RedisConnectionStringName": "default",
    "DefaultConnectionStringName": "default",
    "ConnectionStrings": {
      "default": {
        "UseShortNaming": false,
        "UseEnvironmentVirtualHost": false,
        "UseQuorum": false,
        "ConnectionString": "host=192.168.1.120:5672;username=root;password=root;publisherConfirms=true;timeout=60"
      }
    },
    "ConsumerAssemblies": []
  },
  "DbCaching": {
    "Enabled": true,
    "PublishMode": "Redis",
    "RedisConnectionStringName": "default",
    "MQConnectionStringName": "default",
    "PreloadProviders": [], //"Demo.WebAPI.Apis.DemoProvider,Demo.WebAPI"
    "RefleshTables": []
  },

  "AutoMapper": {
    "Assemblies": [ "Demo.WebAPI.dll" ] // 需要自动注册的dll名称,+开头不存在不异常
  },

  "JwtAuth": {
    "Enabled": true, //是否起效
    "DebugToken": "", // Debug时默认的JwtToken或者UserId（仅ConfigUtil.IsDebugEnvironment时有效）
    "SigningKey": "NoiA32QqU0elJ0FW5qgnILF7M3WpP7fS",
    "Issuer": "tinyfx.com",
    "Audience": "tinyfx.com",
    "ValidateLifetime": false, //是否验证过期
    "ExpireMinutes": 30 // Token过期时间（分钟）,一年525600
  },

  // 雪花ID TinyFx.IDGenerator
  "SnowflakeId": {
    "Enabled": true,
    "UseRedis": true,
    "RedisConnectionStringName": "default",
    "RedisExpireSeconds": 600, //过期时间
    "DataCenterId": 0, // 数据中心ID（范围0-7）
    "WorkerId": 0, //机器码(范围0-1023) UseRedis二选一
    "WorkerIdBits": 10 // 机器码位长度（默认10 => 1023）
  },
  "JsonHttpClient": {
    "pala": {
      "BaseAddress": "https://api.github.com/",
      "Timeout": 10000, // 请求超时时长（毫秒）
      "Retry": 0, //重试次数
      "RequestHeaders": {}, //key-value格式,与Settings相同
      "Settings": {
        "PartnerId": "OurGame",
        "Currency": "USD"
      }
    }
  },
  "IP2Country": {
    "Enabled": true,
    "DbIpSource": null, //IP库：https://db-ip.com/db/download/ip-to-country-lite
    "AllowIps": "" //允许的IP,分割 * 全部允许
  },

  // #region ******** Asp.Net ********
  // Asp.Net配置
  "AspNet": {
    "UseRequestBuffering": true, // 是否缓存Request.Body，如果不需要读取Body设置为false
    "UseApiActionResultFilter": true, // 是否使用ApiActionResultFilter(返回统一结构 TinyFx.AspNet.ApiResult)
    "UseModelStateInvalid": true, // 是否使用ValidateModelFilter（屏蔽[ApiController]的自动 400 响应）
    "UseResponseCompression": true, // 是否启用压缩br,gzip
    "UseApiVersioning": true, // 是否开启版本控制，基类继承TinyFxControllerVersionBase，命名空间使用如xxx.V2
    "RequestPeriodSecond": 15, //请求宽限期（秒）
    "RequestBytesPerSecond": 100, //请求每秒字节限制
    "UseSyncNotify": true, //客户端同步通知
    "Swagger": {
      "Enabled": true,
      "UseSchemaFullName": false //生成接口用到的类型信息时，是否使用带命名空间的全名称，以避免重名异常
    },
    "PathBase": null, // 项目基础路径
    "HostingStartupAssemblies": [], //启动时host配置assembly，继承ITinyFxHostingStartup
    "DynamicApiAssemblies": [] // 动态加载的API所在的 xxx.dll
  },

  //启用gRPC服务
  "Grpc": {
    "Enabled": true,
    "AutoLoad": true, // 是否自动加载
    "Assemblies": []
  },

  // 启用Session或者Cookie Identity (TinyFx.AspNet.Configuration.SessionAndCookieSection)
  "SessionAndCookie": {
    "UseCookieIdentity": true,
    "CookieTimeout": 3, // cookie过期时间3天
    "Domain": null, // cookie和session保存的domain，跨域如: .xxyy.com
    "SameSiteMode": "Unspecified", // https使用None，其他Unspecified
    "UseSession": true,
    "SessionTimeout": 20 // Session过期时间,20分钟
  },

  // Asp.net core CORS跨域请求配置 (TinyFx.AspNet.Configuration.CorsSection)
  "Cors": {
    "UseCors": {
      "Enabled": true,
      "EnabledReferer": false,
      "PoliciesProvider": "", //策略提供程序: TinyFx.AspNet.ICorsPoliciesProvider
      "DefaultPolicy": null
    },
    "Policies": {
      "default": {
        "Origins": "*", // 允许的来源,分号;分隔（下同）
        "Methods": "*", // 允许的HTTP方法
        "Headers": "*", // 允许的请求标头
        "MaxAge": 86400 // Access-Control-Max-Age 时间(秒)
      }
    }
  },
  // api访问签名验证
  "AccessSignFilter": {
    "Enabled": true,
    "AccessKeySeed": "vMjV3VFW3SyklQeQ",
    "AccessKeyIndexes": "8, 11, 13, 12, 9, 7, 3, 14, 5, 2, 1, 0, 4, 6, 15, 10",
    "BothKeySeed": "hNMmcYykGdCluYqe",
    "BothKeyIndexes": "7, 1, 4, 15, 5, 2, 0, 8, 13, 14, 9, 12, 11, 10, 6, 3"
  },

  // api访问ip验证
  "AccessIpFilter": {
    "DefaultFilterName": "default",
    "FiltersProvider": "", //TinyFx.Configuration.IApiAccessFiltersProvider
    "Filters": {
      "default": {
        "Enabled": true, // 是否启用
        "EnableIntranet": true, // 是否允许所有内网ip
        "AllowIps": "" // 允许ip列表，;分割。
      }
    }
  },

  // 请求日志配置
  "RequestLogging": {
    "Enabled": true,
    "Default": {
      "Level": "Debug",
      "CustomeExceptionLevel": "Information",
      "Properties": [] // 附加信息：Referer, RemoteIp, UserId, RequestBody, RequestHeaders, ResponseBody, ResponseHeaders
    },
    "Custom": {
      "Level": "Debug",
      "CustomeExceptionLevel": "Information",
      "Properties": [ "RequestBody", "ResponseBody" ],
      "Urls": [ "*" ] //*表示记录全部
    }
  },

  "OAuth": {
    "Enabled": true,
    "ProvidersProvider": null,
    "Providers": {
      "Google": {
        "ClientId": "453912735249-j7k3subq64jbntcgn3pjtnpnbkheka74.apps.googleusercontent.com",
        "ClientSecret": "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"
      },
      "Facebook": {
        "ClientId": "1500613440708250",
        "ClientSecret": "4a4f2c86f00dd771440164076f734ffd"
      }
    }
  },
  // #endregion ******** Asp.Net ********

  "AllowedHosts": "*"
}
